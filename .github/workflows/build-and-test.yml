name: Build and Test

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build-and-test:
    name: Build and Test

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

        ocaml-version:
          - 4.11.x
          - 4.10.x
          - 4.09.x
          - 4.06.x

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Use latest LTS Node.js release
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: actions-ml/setup-ocaml@master
        with:
          ocaml-version: ${{ matrix.ocaml-version }}
          dune-cache: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Install OCaml secondary compiler
        if: runner.os != 'Windows' && matrix.ocaml-version == '4.06.x'
        run: opam install ocamlfind-secondary

      - name: Install ocamlformat
        if: matrix.ocaml-version == '4.11.x' && runner.os == 'Linux'
        run: opam depext ocamlformat=0.16.0 --install

      - name: Install opam dependencies
        run: opam install . --deps-only --with-test --with-doc --ignore-constraints-on=ocaml

      - name: Install npm dependencies
        working-directory: ocaml-lsp-server/test/e2e
        run: yarn --frozen-lockfile

      - name: Build
        run: opam exec -- make all

      - name: Check formatting
        if: matrix.ocaml-version == '4.11.x' && runner.os == 'Linux'
        run: opam exec -- make fmt

      - name: Run OCaml tests
        if: matrix.ocaml-version == '4.11.x'
        run: opam exec -- make test-ocaml

      - name: Run node tests
        if: matrix.ocaml-version == '4.11.x'
        run: opam exec -- make test-e2e
